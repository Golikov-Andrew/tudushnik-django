version: '3'

services:
  tdm_db:
    container_name: tdm_postgres
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: "${TDM_DATABASE_DTBS}"
      POSTGRES_USER: "${TDM_DATABASE_USER}"
      POSTGRES_PASSWORD: "${TDM_DATABASE_PSWD}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    ports:
     - "5438:5432"
    volumes:
      # - ./data:/docker-entrypoint-initdb.d
      - ./data:/var/lib/postgresql/data
    networks:
      - tdm_network
    
  tdm_server:
    build:
      context: .
      dockerfile: Dockerfile.python
#    image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    ports:
      - "8000:8000"
    depends_on:
      - tdm_db
    command: python3 /usr/src/app_tdm/manage.py runserver 0.0.0.0:8000
#    command: python3 gunicorn_start.py
    #command: python3 /usr/src/app_tdm/manage.py migrate && python3 /usr/src/app_tdm/manage.py collectstatic && python3 /usr/src/app_tdm/manage.py createsuperuser && python3 manage.py runserver 0.0.0.0:8000
    #command: bash init.sh && python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app_tdm
    networks:
      - tdm_network

  tdm-nginx-proxy:
    container_name: tdm_nginx_proxy_container
    image: nginxproxy/nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf:/etc/nginx/conf.d
#      - ./host.dev.conf:/etc/nginx/conf.d/proxy.conf
      - ./html:/usr/share/nginx/html
      - .:/usr/share/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - tdm_server
    networks:
      - tdm_network


networks:
  tdm_network:
    driver: bridge
