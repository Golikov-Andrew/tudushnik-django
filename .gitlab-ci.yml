stages:
  - linting
  - test
  - build
  - deploy

variables:
  GIT_CURL_VERBOSE: 1
  GIT_TRACE: 1
  DOCKER_TLS_CERTDIR: ""
  TDM_DATABASE_DTBS: $TDM_DATABASE_DTBS
  TDM_DATABASE_USER: $TDM_DATABASE_USER
  TDM_DATABASE_PSWD: $TDM_DATABASE_PSWD
  POSTGRES_HOST_AUTH_METHOD: trust

# before_script:
#   - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

flake8:
  stage: linting
  image: python:3.8
  script:
    - pip install flake8
    - flake8 --verbose .
  allow_failure: true
  tags:
    - docker

docker build:
  stage: build
  image: docker:20.10
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -f Dockerfile.python .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  tags:
    - docker

# deploy:
#   stage: deploy
#   image: docker/compose:latest
#   services:
#     - docker:dind
#   before_script:
#     - docker info
#     - docker-compose --version
#     - echo $TDM_DATABASE_DTBS
#   script:
#     - docker-compose down
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#     - docker-compose up
#   tags:
#     - docker

# deploy to dev:
#   stage: deploy
#   before_script:
#     - chown -R gitlab-runner:gitlab-runner .
#   script:
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#     - docker compose down
#     - ls -la
#     - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    # - docker run -d -p 8000:8000 $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    # - docker compose up -d
    # - docker compose exec python_server python3 manage.py migrate
  # tags:
  #   - dev-shell

test migrations:
  stage: test
  image: python:3.8
  services:
    - name: postgres:14
      alias: tdm_db
  variables: 
    POSTGRES_DB: $TDM_DATABASE_DTBS
    POSTGRES_USER: $TDM_DATABASE_USER
    POSTGRES_PASSWORD: $TDM_DATABASE_PSWD
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - pip install -r requirements.txt
    - python3 --version
    - python3 manage.py migrate
  tags:
    - docker

deploy to dev:
  stage: deploy
  before_script:
    - chown -R gitlab-runner:gitlab-runner .
  script:
    - cd .cicd
    - python3 -m venv ansible-venv
    - source ansible-venv/bin/activate
    - pip install -r requirements.txt
    - ansible-playbook ./deploy.yaml -i "./inventories/dev/hosts"
